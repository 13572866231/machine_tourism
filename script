cat("\014")

#Set seed
seed <-777

# Required packages
library(corrplot)
library(dplyr)
library(caret)
library(dygraphs)
library(wordcloud)
library(RColorBrewer)
library(tempdisagg)
library(xts)
library(randomForest)

reciepts <- read.csv("quarterly_receipts.csv")# Read in data
googletrends <- read.csv("google_trends.csv")
wordcloud <- read.csv("wordcloud.csv")
arrivals_nights <- read.csv("arrivals_nights.csv")

# convert to time series
quarterly_reciepts <- ts(reciepts$Tourism.receipts, start=c(2005, 1), end=c(2016, 4), frequency=4) 
tot_arrivals <- ts(arrivals_nights$Arrivals, start=c(2004,1), end=c(2016,12), frequency=12)
tot_nights <- ts(arrivals_nights$Nights, start=c(2004,1), end=c(2016,12), frequency=12)
time <- ts(arrivals_nights$time, start=c(2004,1), end=c(2016,12), frequency=12)
d1 <- ts(arrivals_nights$d1, start=c(2004,1), end=c(2016,12), frequency=12)
d2 <- ts(arrivals_nights$d2, start=c(2004,1), end=c(2016,12), frequency=12)
d3 <- ts(arrivals_nights$d3, start=c(2004,1), end=c(2016,12), frequency=12)

# Convert to date
googletrends$Month <- as.Date(as.factor(googletrends$Month), format("%Y%m%d"))
# Convert to xts
x <- xts(googletrends, order.by = googletrends$Month) 

#Wordcloud
pal <- brewer.pal(9, "Dark2")
wordcloud(words = wordcloud$Word, freq = wordcloud$Freq, min.freq = 1,
          , random.order=FALSE, rot.per=0.35, 
          colors=pal)

#Subset
tour.us.data  <- select(googletrends,contains("United.States"))
tour.ven.data <- select(googletrends,contains("Venezuela"))
tour.col.data <- select(googletrends,contains("Colombia"))
tour.ned.data <- select(googletrends,contains("Netherlands"))
tour.can.data <- select(googletrends,contains("Canada"))

# calculate and plot correlation matrix
corMat_tour.us.data <- cor(tour.us.data[, -1])
corMat_tour.ven.data <- cor(tour.ven.data[, -1])
corMat_tour.col.data <- cor(tour.col.data[, -1])
corMat_tour.ned.data <- cor(tour.ned.data[, -1])
corMat_tour.can.data <- cor(tour.can.data[, -1])

corrplot.mixed(corMat_tour.us.data,  order = "hclust", upper ="pie")
corrplot.mixed(corMat_tour.ven.data, order = "hclust", upper ="pie")
corrplot.mixed(corMat_tour.col.data, order = "hclust", upper ="pie")
corrplot.mixed(corMat_tour.ned.data, order = "hclust", upper ="pie")
corrplot.mixed(corMat_tour.can.data, order = "hclust", upper ="pie")

# Chow-Lin disaggregation
td <- td(quarterly_reciepts ~  tot_arrivals + tot_nights + time + d1 + d3,
         conversion = "sum", to = "monthly", method = "chow-lin-minrss-ecotrim")
monthly_reciepts <- predict(td)
summary(td)
plot(td)

graph_decomposition_fit <- dygraph(cbind(td$actual, td$fitted.values, main="Chow-Lin disaggregation fit"))%>%
        dyAxis("y", label = "In Afl. million")

graph_monthly_reciepts <- dygraph(reciepts_monthly, main="Chow-Lin disaggregation")%>%
        dyOptions(fillGraph = TRUE, fillAlpha = 0.4) %>%
        dyAxis("y", label = "In Afl. million") %>%
        dyOptions( fillGraph = TRUE, drawGrid = FALSE) 

graph_decomposition_fit
graph_monthly_reciepts

#data wrangling
monthly_reciepts_d <- diff(monthly_reciepts, differences=1)
monthly_reciepts_d <- as.xts(monthly_reciepts_d)
X <- merge(monthly_reciepts_d, x)
X <- X[,-2]
y <- X$monthly_reciepts_d

# create timeControl
myTimeControl <- trainControl(method = "timeslice",initialWindow = 36,
                              horizon = 12,fixedWindow = TRUE)

# Random forest
set.seed(seed)
rf <- randomForest(monthly_reciepts_d ~ ., data= X, importance=TRUE,
                         proximity=TRUE,
                   na.action=na.omit)
print(rf)
